#!/bin/bash

help() {
	echo "Usage: $0 [-s] [-c <start_at>] <input_file>"
	echo -e "\tReencodes <input_file> to reduce filesize, copying all tracks"
	echo -e "\tMay not accept unix or windows style paths (not implemented)"
	echo -e "\t-c <start_at>: cut everything before the timestamp <start_at> (hh:mm:ss.xxx)"
	echo -e "\t-s: scale to 720p"
	exit
}

for arg in "$@"; do
	( [[ "$arg" == "-h" ]] || [[ "$arg" == "--help" ]] ) && help
done

start_timestamp=""
scale=""
while getopts ":c:s" opt; do
	case "$opt" in
	c)
		[[ $OPTARG =~ ^[0-9]+(:[0-9]{2}){2}[.][0-9]{3}$ ]] || help
		start_timestamp="-ss $OPTARG"
		;;
	s)
		scale="-vf scale=1280:-1"
		;;
	*)
		help
		;;
	
	esac
done
shift $((OPTIND-1))
[[ $# -eq 1 ]] || help


file="$1"
[[ -f "$file" ]] || { echo "Error: Input file does not exist"; exit; }

bak="${file%.*}.bak.${file##*.}"
temp="${file%.*}.temp.mkv"

if [ -f "$bak" ] || [ -f "$temp" ]; then
	echo ".bak or .temp file already exists ... exiting"
	exit
fi

ffmpeg $start_timestamp -i "$file" $scale -c:v libx265 -crf 19 -preset slow -map 0 "$temp"

if ! [ -f "$temp" ]; then
	echo "Reencode failed ... exiting"
	exit
fi

out="${file%.*}.mkv"

mv -n "$file" "$bak"
mv -n "$temp" "$out"

size_diff=$(($(du "$bak" | awk '{print $1}')-$(du "$out" | awk '{print $1}')))
echo -e "
Finished converting
\t$(basename "$(cygpath "$file")")
Size reduced by
\t$size_diff k"
read -p "Open directory (y)? " ans
if [[ "$ans" == "y" ]]; then
	cygstart "$(dirname "$(cygpath "$out")")"
fi
